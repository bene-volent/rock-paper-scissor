/* Google Fonts */
@import url("https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:wght@600;700&display=swap");

/*
  Josh's Custom CSS Reset
  https://www.joshwcomeau.com/css/custom-css-reset/
*/

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
    box-sizing: border-box;
}

/*
  2. Remove default margin
*/
* {
    margin: 0;
}

/*
  Typographic tweaks!
  3. Add accessible line-height
  4. Improve text rendering
*/
body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

/*
  5. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

/*
  6. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
    font: inherit;
}

/*
  7. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/*
  8. Create a root stacking context
*/
#root,
#__next {
    isolation: isolate;
}

$scissor-bg: linear-gradient(180deg, hsl(39, 89%, 49%), hsl(40, 84%, 53%));
$paper-bg: linear-gradient(180deg, hsl(230, 89%, 62%), hsl(230, 89%, 65%));
$rock-bg: linear-gradient(180deg, hsl(349, 71%, 52%), hsl(349, 70%, 56%));


$dark-txt: hsl(229, 25%, 31%);
$score-txt: hsl(229, 64%, 46%);
$header-outline: hsl(217, 16%, 45%);

$body-background: radial-gradient(circle at top center, hsl(214, 47%, 23%), hsl(237, 49%, 15%));

@mixin mq($bp: 900px) {
    @media (width > $bp) {
        @content;
    }
}




:root {
    --ff: "Barlow Semi Condensed", sans-serif;
    --fw-semibold: 600;
    --fw-bold: 700;



    --size-1: calc(0.25rem * 1);
    --size-2: calc(0.25rem * 2);
    --size-3: calc(0.25rem * 3);
    --size-4: calc(0.25rem * 4);
    --size-5: calc(0.25rem * 5);
    --size-6: calc(0.25rem * 6);
    --size-7: calc(0.25rem * 7);
    --size-8: calc(0.25rem * 8);
    --size-9: calc(0.25rem * 9);
    --size-10: calc(0.25rem * 10);
    --size-11: calc(0.25rem * 11);
    --size-12: calc(0.25rem * 12);
    --size-13: calc(0.25rem * 13);
    --size-14: calc(0.25rem * 14);
    --size-15: calc(0.25rem * 15);
    --size-16: calc(0.25rem * 16);
    --size-17: calc(0.25rem * 17);
    --size-18: calc(0.25rem * 18);
    --size-19: calc(0.25rem * 19);
    --size-20: calc(0.25rem * 20);
    --size-21: calc(0.25rem * 21);
    --size-22: calc(0.25rem * 22);
    --size-23: calc(0.25rem * 23);
    --size-24: calc(0.25rem * 24);
}

.container {
    width: min(calc(100% - 4rem), 800px);
    margin-inline: auto;
}


.btn {

    cursor: pointer;
    background-color: transparent;
    padding: 0;
    border: none;
    font: inherit;

    transition: transform 350ms ease-in-out;
    &--hover:hover{
        
        transform: translateY(-5px);
    }
}

body {
    min-width: 375px;

    //   min-height: 100dvh;
    background: $body-background;
    font-family: var(--ff);
    font-weight: var(--fw-semibold);

}

main {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    // grid-template-rows: auto 1fr;
    position: relative;
    padding-block: var(--size-8);


    min-height: 100vh;
    min-height: 100dvh;

    overflow: hidden;

    // text-transform: uppercase;
}

.header {
    &__wrapper {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: var(--size-4);
        border: var(--size-1) solid $header-outline;
        border-radius: var(--size-2);
    }

    &__logo {
        min-width: 100px;
        max-width: 30%;
    }

    &__score {
        color: $dark-txt;

        font-size: var(--size-10);
        line-height: 1;
        font-weight: var(--fw-bold);

        @include mq() {
            font-size: var(--size-14);
        }


        &_wrapper {

            align-self: stretch;

            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: var(--size-3) var(--size-6);
            border-radius: var(--size-2);

            background-color: #fff;
            text-align: center;

            box-shadow: inset 0px -0.15rem 0.25rem 0px #00000099;

            @include mq() {
                padding: var(--size-3) var(--size-8);
            }
        }

        &_title {
            text-transform: uppercase;
            letter-spacing: calc(var(--size-1) / 2);
            color: $score-txt;
            font-size: var(--size-3);

            @include mq() {
                font-size: var(--size-4);
            }

        }
    }
}


.game {
    --player-animation: player-reveal 3s 1s ease forwards;
    --cpu-animation: cpu-reveal 2s 2s ease forwards;
    text-align: center;

    &__text {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        align-items: center;
        opacity: 0;

        p {
            margin-inline: auto;

            opacity: 0;
        }

        p:last-child {
            grid-column: 3 / span 1;
        }

        text-transform: uppercase;
        letter-spacing: 0.125ch;
        color: white;
        font-weight: 500;
        // font-size: var(--size-);
        transition: opacity 1s ease;

    }

    &__wrapper {
        display: grid;
        place-content: center;

    }

    &__window {
        // aspect-ratio: 1 / 1;
        background: url('./images/bg-triangle.svg') no-repeat center;
        background-size: 90%;
        width: 100%;
        height: 100%;
        display: grid;
        justify-items: center;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(3, 1fr);

        @include mq() {
            padding-block: 2rem;
        }


    }

    &__btn {


        position: relative;
        width: min(30vmin, 150px);
        aspect-ratio: 1 / 1;

        border-radius: 50%;
        background: var(--background);
        box-shadow: inset 0 -0.25rem #2d2d2d66;


        // transition:
        // transition: all 1s;
        @include mq() {
            scale: 1.3;
        }

        & img {
            pointer-events: none;
            position: relative;
            display: inline-block;
            z-index: 3;
            width: 40%;

        }
        &::before {

            content:"";
            
            position: absolute;
            inset: 0;
            border-radius: 50%;
            --shadow-clr:hsl(0 0 100% / 0.02);
            box-shadow: 0 0 0 var(--size-3) hsl(0 0% 100% / 0.05), 
                        0 0 0 var(--size-7) hsl(0 0% 100% / 0.05),
                        0 0 0 var(--size-12) hsl(0 0% 100% / 0.05), 
                        0 0 0 var(--size-18) hsl(0 0% 100% / 0.05);
        
            opacity: 0;
            scale: 0;
            // transition: scale 0 ease-in-out ;
        }


        &::after {
            content: '';
            position: absolute;
            inset: 12.5%;
            border-radius: 50%;
            background: #fff;
            box-shadow: inset 0 0.25rem #2d2d2d66;

            z-index: 2;
        }
    }

    &__rock {
        --background: #{$rock-bg};
        grid-area: 3 / 2 / span 1 / span 1;
    }

    &__paper {
        --background: #{$paper-bg};

        grid-area: 1 / 1/ span 1 / span 1;
    }

    &__scissor {
        --background: #{ $scissor-bg};

        grid-area: 1 / 3 / span 1 / span 1;
    }

    &__rules_open {
        align-self: center;
        padding: var(--size-4) var(--size-12);
        border: 1px solid #fff;
        color: #fff;
        border-radius: var(--size-2);
        text-transform: uppercase;
        letter-spacing: 0.5ch;

        @include mq() {
            align-self: flex-end;
            margin-inline: var(--size-8);
        }
    }




    &[data-state='played'] & {

        &__text {
            opacity: 1;
            order: 2;
            transform: translateY(var(--size-4));

            @include mq() {
                font-size: var(--size-8);
                order: 0;
                transform: translateY(calc(-1 * var(--size-16)));

            }

            p:first-child {

                animation: var(--player-animation);
            }

            p:last-child {
                animation: var(--cpu-animation);

            }


        }

        &__window {
            background: transparent;
            grid-template-rows: repeat(3, auto);
        }

        &__btn {
            opacity: 0;

        }

        &__btn[data-select=''] {
            display: none;

        }

        &__btn.won::before{
            opacity: 1;
            scale: 1;
            transition: scale 350ms 500ms ease-in-out ;

        }

        &__btn[data-select="player"] {
            grid-row: 2 / span 1;
            grid-column: 1 / span 1;
            opacity: 0;
            // translate: ;
            animation: var(--player-animation);
            cursor:not-allowed;
            @include mq() {
                scale: 2;
            }
        }

        &__btn--clone[data-select="cpu"] {
            opacity: 0;
            grid-row: 2 / span 1;
            grid-column: 3 / span 1;
            animation: var(--cpu-animation);
            cursor:not-allowed;

            @include mq() {
                scale: 2;
            }
        }



    }

}

@keyframes player-reveal {

    0% {
        transform: translateX(50px);

    }

    70% {
        opacity: 1;
    }

    to {
        opacity: 1;
        transform: translateX(0);

    }
}

@keyframes cpu-reveal {
    0% {
        transform: translateX(-50px);

    }

    70% {
        opacity: 1;
    }

    to {
        opacity: 1;
        transform: translateX(0);

    }
}

@include mq() {
    @keyframes player-reveal {

        0% {
            transform: translateY(50px);

        }

        33% {
            opacity: 1;
            transform: translateY(0);
        }

        66% {
            opacity: 1;
            transform: translateY(0);
        }

        to {
            opacity: 1;
            transform: translate(-25px, 0);
        }
    }

    @keyframes cpu-reveal {
        0% {
            transform: translateY(50px);

        }

        50% {
            opacity: 1;
            transform: translateY(0);
        }

        to {
            opacity: 1;
            transform: translate(25px, 0);
        }
    }
}


.controls {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    gap: var(--size-6);
    text-align: center;

}

.result {

    opacity: 0;
    // visibility: hidden;
    &:not([data-result=""]) {

        opacity: 1;
        transform: translateY(-10px);
        transition: opacity 1s ease-in-out,transform 1s 4s ease-in-out;
    }

    

    &__text {

        color: #fff;
        text-transform: uppercase;
        letter-spacing: 0.125ch;

        font-size: var(--size-12);
        font-weight: var(--fw-bold);
    }


    &__newBtn {
        width: 100%;

        padding: var(--size-4) var(--size-6);
        border-radius: var(--size-2);

        background-color: #fff;

        letter-spacing: 0.25ch;
        text-transform: uppercase;
    }

    &[data-result='win'] & {
        &__newBtn {
            color: hsl(230, 89%, 62%);
        }
    }

    &[data-result='loss'] & {
        &__newBtn {
            color: hsl(349, 71%, 52%);
        }
    }

    &[data-result='tie'] & {
        &__newBtn {
            color: #222;
        }
    }

    @include mq() {
        position: absolute;
        &:not([data-result=""]) {
            animation: control-animation 1s ease-in-out forwards;
    
        }

    }
}


@include mq() {
    @keyframes control-animation {

        0% {
            opacity: 0;
            top: 70%;
        }

        60% {
            opacity: 1;
        }

        100% {
            opacity: 1;
            top: 50%;
        }

    }
}

.rules {
    position: absolute;
    inset: 0;
    // min-width: 375px;

    z-index: 5;

    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;

    background-color: #fff;
    transform: scale(0);
    transform-origin: center center;
    opacity: 0;

    transition: transform 250ms 250ms ease, opacity 500ms ease;


    &.active {
        transform: scale(1);
        opacity: 1;
        transition: transform 250ms 250ms ease, opacity 500ms ease;

    }

    &__heading {

        font-size: var(--size-8);
    }

    &__close {
        padding: var(--size-6);
        border-radius: 50%;
        border: 1px solid $header-outline;
        transition: scale 350ms ease;

        &:hover {
            scale: 1.2;
        }

        &:active {
            background-color: #aaa;
        }
    }

    @include mq(){
        top: 50%;
        left: 50%;
        translate: -50% -50%;

        border-radius: var(--size-4);

        max-width: 40rem;
        aspect-ratio: 1 / 1 ;
    
        display: grid;
        // justify-items: center;
        grid-template-areas:
            'rulesHeading rulesCloseBtn'
            'rulesImage rulesImage';
        grid-template-rows: 1rem 1fr;
        grid-template-columns: 1fr 1fr;

        gap: var(--size-8);

        padding: var(--size-8);
        



        &__heading{
            grid-area: rulesHeading;
            margin-right: auto;
        }
        &__close{
            grid-area: rulesCloseBtn;
            border: none;
            margin-left: auto;
        }
        &__img{
            grid-area: rulesImage;
            width: 100%;
        }

    }
}

.attribution {

    position: fixed;
    display:grid;
    gap: 1rem;

    font-size: 1rem;
    text-align: center;

    padding: 1rem;

  
    color: white;
    background-color: #dddddd09;
    inset: 0 0 auto;

    z-index: 3;
    @include mq(){
        inset: auto;
    }
}


  .attribution a {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    text-decoration: none;
    color: white;
  }